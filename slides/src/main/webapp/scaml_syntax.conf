h1. Scaml

* Scala Markup Language
** Scala version of Haml
** Very DRY and concise for XHTML/XML
** Jade syntax alternative available

h1. Scaml : Syntax 101 (HTML)

* Elements

{pygmentize:text}
%div
  %p A very nice paragraph about ...
{pygmentize}

* Attributes

{pygmentize:text}
%a(href="http://scalate.fusesource.org" title="Scalate")
%a{:href=>"http://scalate.fusesource.org", :title=>"Scalate"}
{pygmentize}

* Class and ID

{pygmentize:text}
%div#content
  %div.important
    %p.header An important message about
{pygmentize}
\\
{pygmentize:text}
#content
  .important
    %p.header An important message about
{pygmentize}

h1. Scaml : Syntax 102 (Scala)

* Scala code and interpolation

{pygmentize:text}
%p
  = order.customer.name
{pygmentize}
\\
{pygmentize:text}
%p= order.customer.id
{pygmentize}
\\
{pygmentize:text}
%p Customer #{order.customer.id}: #{order.customer.name}
{pygmentize}

* Binding attributes

{pygmentize:text}
-@ val order: be.anova.scalate.syntax.Order
%p Order #{order.id} for customer #{order.customer.name}
{pygmentize}
\\
{pygmentize:text}
-@ import val order: be.anova.scalate.syntax.Order
%p Order #{id} for customer #{customer.name}
{pygmentize}

h1. Scaml : Syntax 103 (Scala)

* Running Scala

{pygmentize:text}
- val brands = List("Boeing", "Cessna", "Piper")
{pygmentize}
\\
{pygmentize:text}
-
  val single_articles =
    for (line <- order.lines; if line.quantity == 1)
      yield line.article
{pygmentize}

* Scala blocks

{pygmentize:text}
%p= Wouldn't you like to order more of these?
%ul
  - for (article <- single_articles)
    %li= article
{pygmentize}

h1. Scaml : Example

{snippet:url=../syntax/src/main/resources/scaml_demo.scaml|lang=text}
{snippet}

h1. Scaml : Benefits and drawbacks

* Benefits
** Very concise and DRY way of coding XHTML/XML markup
** Focus on structure of markup with indentation
* Drawbacks
** Harder to get started with
** Not editable by non-developers as Mustache
